{

	"type": "project",
	"description": "Docker symfony environment",
	"keywords": [
		"Docker",
		"Apache",
		"Php",
		"Symfony",
		"Supervisord",
		"MySQL",
		"RabbitMQ"
	],
	"homepage": "https://github.com/rami-aouinti/PlatformBeta",
	"license": "MIT",
	"authors": [
		{
			"name": "Mohamed Rami Aouinti",
			"email": "rami.aouinti@gmail.com",
			"homepage": "https://github.com/rami-aouinti",
			"role": "Developer"
		}
	],
	"require": {
		"php": "^8.0.0",
		"ext-amqp": "*",
		"ext-ctype": "*",
		"ext-iconv": "*",
		"ext-json": "*",
		"ext-mbstring": "*",
		"ext-pdo": "*",
		"ext-pdo_mysql": "*",
		"doctrine/annotations": "^1.13",
		"doctrine/doctrine-bundle": "^2.5",
		"doctrine/doctrine-migrations-bundle": "^3.2",
		"doctrine/orm": "^2.10",
		"dukecity/command-scheduler-bundle": "^4.0",
		"easycorp/easyadmin-bundle": "^3.5",
		"eightpoints/guzzle-bundle": "v8.1.0",
		"knplabs/knp-paginator-bundle": "^5.8",
		"lcobucci/jwt": "^4.1",
		"phpdocumentor/reflection-docblock": "^5.3",
		"phpstan/phpdoc-parser": "^1.2",
		"sensio/framework-extra-bundle": "^6.2",
		"stof/doctrine-extensions-bundle": "^1.7",
		"symfony/apache-pack": "^1.0",
		"symfony/asset": "5.4.*",
		"symfony/config": "5.4.*",
		"symfony/console": "5.4.*",
		"symfony/dotenv": "5.4.*",
		"symfony/expression-language": "5.4.*",
		"symfony/flex": "^2.0",
		"symfony/form": "5.4.*",
		"symfony/framework-bundle": "5.4.*",
		"symfony/http-client": "5.4.*",
		"symfony/intl": "5.4.*",
		"symfony/mailer": "5.4.*",
		"symfony/mercure-bundle": "^v0.3.4",
		"symfony/messenger": "5.4.*",
		"symfony/mime": "5.4.*",
		"symfony/monolog-bundle": "^3.7",
		"symfony/notifier": "5.4.*",
		"symfony/process": "5.4.*",
		"symfony/property-access": "5.4.*",
		"symfony/property-info": "5.4.*",
		"symfony/proxy-manager-bridge": "5.4.*",
		"symfony/routing": "5.4.*",
		"symfony/runtime": "5.4.*",
		"symfony/security-bundle": "5.4.*",
		"symfony/serializer": "5.4.*",
		"symfony/string": "5.4.*",
		"symfony/swiftmailer-bundle": "^3.5",
		"symfony/translation": "5.4.*",
		"symfony/twig-bundle": "5.4.*",
		"symfony/validator": "5.4.*",
		"symfony/web-link": "5.4.*",
		"symfony/webpack-encore-bundle": "^1.13",
		"symfony/yaml": "5.4.*",
		"twig/extensions": "^1.5",
		"twig/extra-bundle": "^2.12|^3.0",
		"twig/twig": "^2.12|^3.0"
	},
	"conflict": {
		"symfony/debug": "<3.3",
		"symfony/symfony": "*",
		"symfony/twig-bundle": "<3.3"
	},
	"require-dev": {
		"bamarni/composer-bin-plugin": "^1.4",
		"doctrine/doctrine-fixtures-bundle": "^3.4",
		"systemsdk/easy-log-bundle": "1.10.*",
		"ergebnis/composer-normalize": "^2.16",
		"roave/security-advisories": "dev-latest",
		"symfony/browser-kit": "5.4.*",
		"symfony/debug-bundle": "5.4.*",
		"symfony/maker-bundle": "^1.36",
		"symfony/requirements-checker": "^2.0",
		"symfony/stopwatch": "5.4.*",
		"symfony/var-dumper": "5.4.*",
		"symfony/web-profiler-bundle": "5.4.*"
	},
	"config": {
		"platform": {
			"php": "8.0.0"
		},
		"preferred-install": {
			"*": "dist"
		},
		"sort-packages": true,
		"allow-plugins": {
			"composer/package-versions-deprecated": true,
			"bamarni/composer-bin-plugin": true,
			"ergebnis/composer-normalize": true,
			"symfony/flex": true,
			"symfony/runtime": true
		}
	},
	"extra": {
		"bamarni-bin": {
			"target-directory": "tools"
		},
		"symfony": {
			"allow-contrib": true,
			"require": "5.4.*"
		}
	},
	"autoload": {
		"psr-4": {
			"App\\": "src/"
		},
		"classmap": [],
		"exclude-from-classmap": []
	},
	"autoload-dev": {
		"psr-4": {
			"App\\Tests\\": "tests/",
			"PHPUnit\\": "tools/01_phpunit/vendor/phpunit/phpunit/src",
			"Symfony\\Bridge\\PhpUnit\\": "tools/01_phpunit/vendor/symfony/phpunit-bridge",
			"PHPMD\\": "tools/06_phpmd/vendor/phpmd/phpmd/src/bin",
			"PhpCsFixer\\": "tools/03_ecs/vendor/symplify/easy-coding-standard/vendor/friendsofphp/php-cs-fixer/src",
			"Symplify\\CodingStandard\\": "tools/03_ecs/vendor/symplify/easy-coding-standard/vendor/symplify/coding-standard/src",
			"Symplify\\EasyCodingStandard\\": "tools/03_ecs/vendor/symplify/easy-coding-standard/src",
			"ECSPrefix20210928\\Symplify\\RuleDocGenerator\\": "tools/03_ecs/vendor/symplify/easy-coding-standard/vendor/symplify/rule-doc-generator-contracts/src",
			"PHPStan\\PhpDoc\\PHPUnit\\": "tools/02_phpstan/vendor/phpstan/phpstan-phpunit/src/PhpDoc/PHPUnit",
			"PHPStan\\Rules\\PHPUnit\\": "tools/02_phpstan/vendor/phpstan/phpstan-phpunit/src/Rules/PHPUnit",
			"PHPStan\\Symfony\\": "tools/02_phpstan/vendor/phpstan/phpstan-symfony/src/Symfony",
			"PHPStan\\Type\\PHPUnit\\": "tools/02_phpstan/vendor/phpstan/phpstan-phpunit/src/Type/PHPUnit",
			"PHPStan\\Type\\Symfony\\": "tools/02_phpstan/vendor/phpstan/phpstan-symfony/src/Type/Symfony"
		}
	},
	"prefer-stable": true,
	"scripts": {
		"prepare-test": [
			"php bin/console doctrine:database:drop --if-exists --force --env=test",
			"php bin/console doctrine:database:create --env=test",
			"php bin/console doctrine:schema:update --force --env=test",
			"php bin/console doctrine:fixtures:load -n --env=test"
		],
		"prepare": [
			"php bin/console doctrine:database:drop --if-exists --force",
			"php bin/console doctrine:database:create",
			"php bin/console doctrine:schema:update --force",
			"php bin/console doctrine:fixtures:load -n"
		],
		"post-install-cmd": [
			"if test -d vendor/symfony/requirements-checker; then ./vendor/bin/requirements-checker; fi",
			"if test -d vendor/bamarni/composer-bin-plugin; then composer bin all install; fi",
			"if which local-php-security-checker; then local-php-security-checker --update-cache && local-php-security-checker; fi",
			"@auto-scripts",
			"@composer dump-autoload"
		],
		"post-update-cmd": [
			"if test -d vendor/symfony/requirements-checker; then ./vendor/bin/requirements-checker; fi",
			"if test -d vendor/bamarni/composer-bin-plugin; then composer bin all update; fi",
			"if which local-php-security-checker; then local-php-security-checker --update-cache && local-php-security-checker; fi",
			"@auto-scripts",
			"@composer dump-autoload"
		],
		"auto-scripts": {
			"cache:clear": "symfony-cmd",
			"cache:warmup": "symfony-cmd",
			"assets:install --symlink --relative %PUBLIC_DIR%": "symfony-cmd",
			"assets:install %PUBLIC_DIR%": "symfony-cmd"
		}
	},
	"support": {
		"issues": "https://github.com/rami-aouinti/PlatformBeta/issues"
	}
}
